--This is a USE model that has embedded SOIL operations to model a generic strategy patern design pattern

model StrategyPattern

--classes
class Duck
attributes
	quackBehavior : IQuackBehavior
	flyBehavior : IFlyBehavior
	location : String
	sound : String
operations
	display()
	performQuack()
		begin
			self.sound:=self.quackBehavior.quack()
		end
	setQuackBehavior(qb:IQuackBehavior)
		begin
			self.quackBehavior := qb
		end
	performfly()
		begin
			self.location := self.flyBehavior.fly()
		end
	setFlyBehavior(fb:IFlyBehavior)
		begin
			self.flyBehavior := fb
		end
end

class Mallard < Duck
attributes -- None
operations
	display()
end

class DecoyDuck < Duck
attributes -- None
operations
	display()
end

class RubberDuck < Duck
attributes -- None
operations
	display()
end

class IQuackBehavior
attributes
	--None
operations
	quack():String
		begin
		end
end

class Quack < IQuackBehavior
attributes
	--None
operations
	quack():String
		begin
			result:='quack';
		end
end

class Squeak < IQuackBehavior
attributes
	--None
operations
	quack():String
		begin
			result:='squeak';
		end
end

class Mute < IQuackBehavior
attributes
	--None
operations
	quack():String
		begin
			--result:='NoNoise';
		end
end

class IFlyBehavior
attributes-- None
operations
	fly() : String
		begin
		end
end

class FlyWithWings < IFlyBehavior
attributes -- None
operations
	fly() : String
		begin
			result := 'sky';
		end
end

class FlyNotSoMuch < IFlyBehavior
attributes -- None
operations
	fly() : String
		begin
			result := 'ground';
		end
end

--associations
association DuckHasAQuackBehavior between
	Duck[0..*] role duck
	IQuackBehavior[1] role quack
end

association DuckHasAFlyBehavior between
	Duck[0..*] role duck
	IFlyBehavior[1] role fly
end

--Not working currently
--constraints

--context Duck::performQuack()
--	post soundMade: self.sound = undefined
--context Mallard::performQuack()
--	post soundMade: self.sound = 'quack'
--context DecoyDuck:
--	post soundMade: self.sound = undefined --hasn't changed since it can't make a sound
